{"version":3,"sources":["Button/index.js","App.js","index.js"],"names":["Button","props","className","idx","id","onClick","name","App","useState","number","setNumber","oldNumber","setOldNumber","wynik","setWynik","evaluate","setEvaluate","clear","putNumber","newNumber","toString","indexOf","operations","operator","console","log","length","slice","calculate","eval","size","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54180711.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.scss';\r\n\r\n\r\nfunction Button(props) {\r\n    return (\r\n    <button className={`button ${props.idx}`} id={props.idx} onClick={props.onClick}>{props.name}</button>\r\n    )\r\n  }\r\nexport default Button","import { useState } from 'react';\nimport './App.scss';\nimport Button from './Button'\n\n\nfunction App() {\n  const [number, setNumber] = useState(0)\n  const [oldNumber, setOldNumber] = useState('')\n  const [wynik, setWynik] = useState('')\n  const [evaluate, setEvaluate] = useState(false)\n\n\n  const clear = () =>{\n    setNumber(0)\n    setOldNumber('')\n    setWynik('')\n  }\n  \n\n  const putNumber = (newNumber) =>{\n    setWynik('')\n    if(newNumber == '.'){\n      if(number.toString().indexOf('.') == -1){\n        number ? setNumber(number + `${newNumber}`) : setNumber(newNumber) \n        oldNumber ? setOldNumber(oldNumber + `${newNumber}`) : setOldNumber(newNumber)\n      }\n    }else if( number == '+' || number == '-' || number == '/' || number =='*'){\n      setNumber(newNumber)\n      oldNumber ? setOldNumber(oldNumber + `${newNumber}`) : setOldNumber(newNumber)\n      \n    }else{\n      number ? setNumber(number + `${newNumber}`) : setNumber(newNumber) \n    oldNumber ? setOldNumber(oldNumber + `${newNumber}`) : setOldNumber(newNumber)\n    }\n  }\n  const operations = (operator) => {\n    if(evaluate){\n      setEvaluate(false)\n      console.log(wynik)\n      setOldNumber(wynik + operator)\n    }\n    setNumber(operator)\n    if(operator == '-' && oldNumber.length == 0 ){\n      setOldNumber(operator)\n    }\n    if(oldNumber.length == 0){\n      return;\n    }else if(operator == '-' && oldNumber[oldNumber.length-1] == '-') {\n      setOldNumber(oldNumber.slice(0,oldNumber.length-1) + '+')\n      return;\n     }else if(operator == '-' &&(oldNumber[oldNumber.length-1] == '+'|| oldNumber[oldNumber.length-1] == '*' || oldNumber[oldNumber.length-1] == '/' )){\n      setOldNumber(oldNumber + `${operator}`)\n     }\n    else if(oldNumber[oldNumber.length-1] == '+'|| oldNumber[oldNumber.length-1] == '*' || oldNumber[oldNumber.length-1] == '/' || oldNumber[oldNumber.length-1] == '-'  ){\n      if(oldNumber[oldNumber.length-2] == '+' || oldNumber[oldNumber.length-2] == '*' || oldNumber[oldNumber.length-2] == '/'){\n        setOldNumber(oldNumber.slice(0,oldNumber.length-2) + operator)\n      }else{\n        setOldNumber(oldNumber.slice(0,oldNumber.length-1) + operator)\n      }\n\n    }else{\n      setOldNumber(oldNumber + `${operator}`)\n    }\n  }\n\n  const calculate = () => {\n    setWynik(eval(oldNumber))\n    setEvaluate(true)\n    setOldNumber(wynik)\n  }\n  \n  return (\n    <div id=\"calculator\" className=\"calc\">\n      <div className=\"displayer\">\n        <div className=\"upper-displayer\">{oldNumber}</div>\n        <div id=\"display\" className=\"lower-displayer\">{wynik ? wynik : number}</div>\n      </div>\n      <div className=\"buttons\">\n        <Button idx=\"clear\" name=\"AC\" size=\"two\" onClick={clear}/>\n        <Button idx=\"divide\" name=\"/\" size=\"one\" onClick={() => operations('/')}/>\n        <Button idx=\"multiply\" name=\"x\" size=\"one\" onClick={() => operations('*')}/>\n        <Button idx=\"seven\" name=\"7\" size=\"one\" onClick={() => putNumber(7)}/>\n        <Button idx=\"eight\" name=\"8\" size=\"one\" onClick={() => putNumber(8)}/>\n        <Button idx=\"nine\" name=\"9\" size=\"one\" onClick={() => putNumber(9)}/>\n        <Button idx=\"subtract\" name=\"-\" size=\"one\" onClick={() => operations('-')}/>\n        <Button idx=\"four\" name=\"4\" size=\"one\" onClick={() => putNumber(4)}/>\n        <Button idx=\"five\" name=\"5\" size=\"one\" onClick={() => putNumber(5)}/>\n        <Button idx=\"six\" name=\"6\" size=\"one\" onClick={() => putNumber(6)}/>\n        <Button idx=\"add\" name=\"+\" size=\"one\" onClick={() => operations('+')}/>\n        <Button idx=\"one\" name=\"1\" size=\"one\" onClick={() => putNumber(1)}/>\n        <Button idx=\"two\" name=\"2\" size=\"one\" onClick={() => putNumber(2)}/>\n        <Button idx=\"three\" name=\"3\" size=\"one\" onClick={() => putNumber(3)}/>\n        <Button idx=\"equals\" name=\"=\" size=\"two\" onClick={calculate} />\n        <Button idx=\"zero\" name=\"0\" size=\"two\" onClick={() => putNumber(0)}/>\n        <Button idx=\"decimal\" name=\".\" size=\"one\" onClick={() => putNumber('.')}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}